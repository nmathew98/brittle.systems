---
import Base from "./Base.astro";
import { SEO } from "astro-seo";
import { evaluate } from "@mdx-js/mdx";
import { readFile } from "node:fs/promises";

const { file, frontmatter } = Astro.props;

const raw = await readFile(file);
const mocked = new Proxy(Object.create(null), {
	get: () => () => {},
});
const article: any = await evaluate(raw, mocked);

const getArticleTags = () => {
	if (
		article.tags &&
		(Array.isArray(article.tags) || typeof article.tags === "string")
	) {
		if (Array.isArray(article.tags)) {
			return article.tags;
		}

		return article.tags.split(", ");
	}

	return frontmatter.tags.split(", ");
};

const publishedTime =
	article.published instanceof Date
		? article.published.toISOString()
		: undefined;
const modifiedTime =
	article.modified instanceof Date
		? article.modified.toISOString()
		: undefined;
const tags = getArticleTags();
---

<Base>
	<SEO
		title={`${frontmatter.title} | brittle.systems`}
		description={frontmatter.description}
		openGraph={{
			basic: {
				title: frontmatter.title,
				type: "article",
				// TODO: Same as favicon
				image: "",
			},
			optional: {
				description: frontmatter.description,
			},
			article: {
				authors: [frontmatter.author],
				publishedTime: publishedTime,
				modifiedTime: modifiedTime,
				section: frontmatter.section,
				tags: tags,
			},
		}}
		slot="head"
	/>
	<slot />
</Base>
